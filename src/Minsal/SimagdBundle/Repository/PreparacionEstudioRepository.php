<?php

namespace Minsal\SimagdBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PreparacionEstudioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PreparacionEstudioRepository extends EntityRepository
{
    public function obtenerPreparacionEstudiosV2($id_estab, $bs_filters = array())
    {
        $query = $this->getEntityManager()
                        ->createQueryBuilder('indCit')
                            ->select('indCit')
                            ->addSelect('m')
                            ->addSelect('IDENTITY(m.idAtencion) as m_id_atencion')
                            ->addSelect('concat(coalesce(emp.apellido, \'\'), \', \', coalesce(emp.nombre, \'\')) as indCit_empleado, emp.id as indCit_id_empleado, tpEmp.tipo as indCit_tipoEmpleado')
                            ->addSelect('usrRg.username as indCit_usernameUserReg, usrRg.id as indCit_id_userReg, usrMd.username as indCit_usernameUserMod, usrMd.id as indCit_id_userMod')
                            ->addSelect('concat(coalesce(usrRgEmp.apellido, \'\'), \', \', coalesce(usrRgEmp.nombre, \'\')) as indCit_nombreUserReg')
                            ->addSelect('case when (usrMd.username is not null) then concat(coalesce(usrMdEmp.apellido, \'\'), \', \', coalesce(usrMdEmp.nombre, \'\')) else \'\' end as indCit_nombreUserMod')
                            ->from('MinsalSimagdBundle:ImgCtlPreparacionEstudio', 'indCit')
                            ->innerJoin('indCit.idAreaServicioDiagnosticoAplica', 'm')
                            ->innerJoin('indCit.idEmpleadoRegistra', 'emp')
                            ->leftJoin('emp.idTipoEmpleado', 'tpEmp')
                            ->innerJoin('indCit.idUserReg', 'usrRg')
                            ->leftJoin('indCit.idUserMod', 'usrMd')
                            ->innerJoin('usrRg.idEmpleado', 'usrRgEmp')
                            ->leftJoin('usrMd.idEmpleado', 'usrMdEmp')
                            ->where('indCit.idEstablecimiento = :id_est')
                            ->setParameter('id_est', $id_estab)
                            ->orderBy('m.id', 'desc')
                            ->addOrderBy('indCit.id', 'desc')
                            ->distinct();
        
        /*
         * --| add filters from BSTABLE_FILTER to query
         */
        $simagd_er_model    = $this->getEntityManager()->getRepository('MinsalSimagdBundle:ImgSolicitudEstudio');
        $apply_filters      = $simagd_er_model->getBsTableFiltersV2($query, $bs_filters);
        if ($apply_filters !== false)
        {
            $query->andWhere($apply_filters);
        }
        /*
         * |-- END filters from BSTABLE_FILTER to query
         */

        return $query->getQuery()->getScalarResult();
    }
}
